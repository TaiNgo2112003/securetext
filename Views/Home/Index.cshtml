@{
    ViewData["Title"] = "Encryption/Decryption Tool";
}

<div class="container-fluid crypto-tool">
    <h1 class="text-center mb-5">@ViewData["Title"]</h1>

    <div class="row">
        <!-- Encryption Section -->
        <div class="col-lg-6">
            <div class="crypto-section encrypt-section">
                <div class="section-header">
                    <i class="fas fa-lock"></i>
                    <h2>Encryption</h2>
                </div>
                
                <div class="algorithm-selector mb-4">
                    <select id="encryptAlgorithm" class="form-select">
                        <option value="aes">AES</option>
                        <option value="des">DES</option>
                        <option value="tripleDes">Triple DES</option>
                    </select>
                </div>
                
                <div class="form-group mb-3">
                    <label for="plainText" class="form-label">Plain Text</label>
                    <textarea id="plainText" class="form-control" rows="4" placeholder="Enter text to encrypt"></textarea>
                </div>
                
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label for="encryptKey" class="form-label">Key (Base64)</label>
                        <div class="input-group">
                            <input type="text" id="encryptKey" class="form-control" value="@ViewBag.AesKey">
                            <button class="btn btn-outline-secondary generate-key" type="button" title="Generate Key">
                                <i class="fas fa-sync-alt"></i>
                            </button>
                        </div>
                    </div>
                    <div class="col-md-6 mb-3">
                        <label for="encryptIV" class="form-label">IV (Base64)</label>
                        <div class="input-group">
                            <input type="text" id="encryptIV" class="form-control" value="@ViewBag.AesIV">
                            <button class="btn btn-outline-secondary generate-iv" type="button" title="Generate IV">
                                <i class="fas fa-sync-alt"></i>
                            </button>
                        </div>
                    </div>
                </div>
                
                <button id="encryptBtn" class="btn btn-primary w-100 py-2">
                    <i class="fas fa-lock me-2"></i>Encrypt
                </button>
                
                <div id="encryptResult" class="result-container mt-4" style="display:none;">
                    <div class="result-header d-flex justify-content-between align-items-center">
                        <strong>Encrypted Result</strong>
                        <button class="btn btn-sm btn-outline-secondary copy-result" data-target="encryptResultText">
                            <i class="fas fa-copy me-1"></i>Copy
                        </button>
                    </div>
                    <div id="encryptResultText" class="result-content"></div>
                </div>
            </div>
        </div>
        
        <!-- Decryption Section -->
        <div class="col-lg-6">
            <div class="crypto-section decrypt-section">
                <div class="section-header">
                    <i class="fas fa-lock-open"></i>
                    <h2>Decryption</h2>
                </div>
                
                <div class="algorithm-selector mb-4">
                    <select id="decryptAlgorithm" class="form-select">
                        <option value="aes">AES</option>
                        <option value="des">DES</option>
                        <option value="tripleDes">Triple DES</option>
                    </select>
                </div>
                
                <div class="form-group mb-3">
                    <label for="cipherText" class="form-label">Cipher Text</label>
                    <textarea id="cipherText" class="form-control" rows="4" placeholder="Enter text to decrypt"></textarea>
                </div>
                
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label for="decryptKey" class="form-label">Key (Base64)</label>
                        <input type="text" id="decryptKey" class="form-control" value="@ViewBag.AesKey">
                    </div>
                    <div class="col-md-6 mb-3">
                        <label for="decryptIV" class="form-label">IV (Base64)</label>
                        <input type="text" id="decryptIV" class="form-control" value="@ViewBag.AesIV">
                    </div>
                </div>
                
                <button id="decryptBtn" class="btn btn-success w-100 py-2">
                    <i class="fas fa-lock-open me-2"></i>Decrypt
                </button>
                
                <div id="decryptResult" class="result-container mt-4" style="display:none;">
                    <div class="result-header d-flex justify-content-between align-items-center">
                        <strong>Decrypted Result</strong>
                        <button class="btn btn-sm btn-outline-secondary copy-result" data-target="decryptResultText">
                            <i class="fas fa-copy me-1"></i>Copy
                        </button>
                    </div>
                    <div id="decryptResultText" class="result-content"></div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    :root {
        --primary-color: #4361ee;
        --secondary-color: #3f37c9;
        --accent-color: #4895ef;
        --light-color: #f8f9fa;
        --dark-color: #212529;
        --success-color: #4cc9f0;
        --danger-color: #f72585;
    }
    
    body {
        background-color: #f5f7fb;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }
    
    .crypto-tool {
        max-width: 1200px;
        padding: 2rem;
    }
    
    .crypto-section {
        background: white;
        border-radius: 12px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.08);
        padding: 2rem;
        height: 100%;
        transition: all 0.3s ease;
    }
    
    .crypto-section:hover {
        box-shadow: 0 15px 35px rgba(0, 0, 0, 0.12);
    }
    
    .encrypt-section {
        border-top: 4px solid var(--primary-color);
    }
    
    .decrypt-section {
        border-top: 4px solid var(--success-color);
    }
    
    .section-header {
        display: flex;
        align-items: center;
        margin-bottom: 1.5rem;
        color: var(--dark-color);
    }
    
    .section-header i {
        font-size: 1.8rem;
        margin-right: 1rem;
    }
    
    .section-header h2 {
        margin: 0;
        font-weight: 600;
    }
    
    .algorithm-selector select {
        border-radius: 8px;
        padding: 0.75rem;
        border: 1px solid #ced4da;
        font-weight: 500;
    }
    
    .form-control, .form-select {
        border-radius: 8px;
        padding: 0.75rem;
        border: 1px solid #ced4da;
    }
    
    textarea.form-control {
        min-height: 120px;
    }
    
    .btn-primary {
        background-color: var(--primary-color);
        border: none;
        border-radius: 8px;
        font-weight: 500;
        letter-spacing: 0.5px;
        transition: all 0.3s;
    }
    
    .btn-primary:hover {
        background-color: var(--secondary-color);
        transform: translateY(-2px);
    }
    
    .btn-success {
        background-color: var(--success-color);
        border: none;
        border-radius: 8px;
        font-weight: 500;
        letter-spacing: 0.5px;
        transition: all 0.3s;
    }
    
    .btn-success:hover {
        background-color: #3aa8d8;
        transform: translateY(-2px);
    }
    
    .result-container {
        background-color: #f8f9fa;
        border-radius: 8px;
        padding: 1.25rem;
        border-left: 4px solid var(--accent-color);
    }
    
    .result-header {
        margin-bottom: 0.75rem;
    }
    
    .result-content {
        word-wrap: break-word;
        white-space: pre-wrap;
        font-family: 'Courier New', Courier, monospace;
        color: var(--dark-color);
    }
    
    .copy-result {
        padding: 0.25rem 0.5rem;
        font-size: 0.8rem;
    }
    
    .generate-key, .generate-iv {
        border-radius: 0 8px 8px 0 !important;
    }
    
    @@media (max-width: 992px) {
        .crypto-section {
            margin-bottom: 2rem;
        }
    }
</style>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/js/all.min.js"></script>
    <script>
        $(document).ready(function() {
            // Copy result functionality
            $('.copy-result').click(function() {
                const targetId = $(this).data('target');
                const text = $('#' + targetId).text();
                navigator.clipboard.writeText(text).then(() => {
                    $(this).html('<i class="fas fa-check me-1"></i>Copied!');
                    setTimeout(() => {
                        $(this).html('<i class="fas fa-copy me-1"></i>Copy');
                    }, 2000);
                });
            });
            
            // Generate random key
            $('.generate-key').click(function() {
                const algorithm = $(this).closest('.crypto-section').hasClass('encrypt-section') 
                    ? $('#encryptAlgorithm').val() 
                    : $('#decryptAlgorithm').val();
                const keySize = algorithm === 'aes' ? 32 : (algorithm === 'des' ? 8 : 24);
                const randomKey = generateRandomBase64(keySize);
                $(this).closest('.input-group').find('input').val(randomKey);
            });
            
            // Generate random IV
            $('.generate-iv').click(function() {
                const randomIV = generateRandomBase64(16); // IV is typically 16 bytes
                $(this).closest('.input-group').find('input').val(randomIV);
            });
            
            // Encrypt button click
            $('#encryptBtn').click(function() {
                const algorithm = $('#encryptAlgorithm').val();
                const text = $('#plainText').val();
                const key = $('#encryptKey').val();
                const iv = $('#encryptIV').val();
                
                if (!text) {
                    alert('Please enter text to encrypt');
                    return;
                }
                
                processCrypto(algorithm, 'encrypt', text, key, iv, 'encryptResultText', 'encryptResult');
            });
            
            // Decrypt button click
            $('#decryptBtn').click(function() {
                const algorithm = $('#decryptAlgorithm').val();
                const text = $('#cipherText').val();
                const key = $('#decryptKey').val();
                const iv = $('#decryptIV').val();
                
                if (!text) {
                    alert('Please enter text to decrypt');
                    return;
                }
                
                processCrypto(algorithm, 'decrypt', text, key, iv, 'decryptResultText', 'decryptResult');
            });
            
            // Sync algorithm selection
            $('#encryptAlgorithm').change(function() {
                $('#decryptAlgorithm').val($(this).val());
            });
            
            $('#decryptAlgorithm').change(function() {
                $('#encryptAlgorithm').val($(this).val());
            });
            
            function generateRandomBase64(length) {
                const randomValues = new Uint8Array(length);
                crypto.getRandomValues(randomValues);
                return btoa(String.fromCharCode.apply(null, randomValues));
            }
            
            function processCrypto(algorithm, action, text, key, iv, resultTextId, resultContainerId) {
                const endpoint = `/Home/Process${algorithm.charAt(0).toUpperCase() + algorithm.slice(1)}`;
                
                $.ajax({
                    url: endpoint,
                    type: 'POST',
                    data: {
                        action: action,
                        text: text,
                        key: key,
                        iv: iv
                    },
                    success: function(response) {
                        if (response.success) {
                            $('#' + resultTextId).text(response.result);
                            $('#' + resultContainerId).show();
                        } else {
                            alert('Error: ' + response.error);
                        }
                    },
                    error: function(xhr) {
                        alert('An error occurred: ' + xhr.responseText);
                    }
                });
            }
        });
    </script>
}